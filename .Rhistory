write.csv(t(paste(indexf,collapse = ",")),"c:/users/administrator/desktop/ind.csv")
View(data1)
View(data1)
View(outt)
View(outt)
View(outt)
View(outt)
View(data1)
View(data1)
getwd()
getwd()
setwd("C:/Users/Administrator/iCloudDrive/Documents/code/upcode")
library(MARSS)
library(readxl)
# ### 方案二
data1 <- read_excel("训练集.xlsx",n_max = 34)
help("read.csv")
data1 <- read.csv("训练集.csv",fileEncoding = "UTF-8")
data1 <- read.csv("训练集.csv",fileEncoding = "UTF-8",Encoding <- "UTF-8")
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("train_datasets.csv",fileEncoding = "UTF-8")
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("train_datasets.csv",fileEncoding = "UTF-8",header = F)
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("train_datasets.csv",fileEncoding = "UTF-8",header = T)
getwd()
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/train_datasets.csv",fileEncoding = "UTF-8",header = T)
help("read.csv")
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/train_datasets.csv",fileEncoding = "UTF-8",header = T,nrows = 35 )
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/train_datasets.csv",fileEncoding = "UTF-8",header = F,nrows = 35 )
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/train_datasets.csv",fileEncoding = "UTF-8",header = F,nrows = 35 )
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/train_datasets.csv",header = F,nrows = 35 )
View(data1)
View(data1)
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/train_datasets.csv",header = T,nrows = 35 )
View(data1)
View(data1)
ncols <- ncol(data1)
View(data1)
View(data1)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/动态因子模型改进.R', encoding = 'UTF-8', echo=TRUE)
help("read.csv")
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/Processed_datasets/train_datasets.csv",header = T,nrows = 35 )
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/Processed_datasets/train_datasets.csv",header = T )
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T )
data1
View(data1)
View(data1)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
View(data1)
View(data1)
anyNA(data1)
ncols <- ncol(data1)
nrows <- nrow(data1)
ty <-edit()
ty
features = data1[2:rows;ncols]
features = data1[2:rows,ncols]
features = data1[2:rows,]
features
View(data1)
View(data1)
nrows
ncols
features <- data1[,2:(cols-1)]
features <- data1[,2:(ncols-1)]
features
# Calculate MSE
library(MARSS)
library(readxl)
data <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
# 导入数据，行是时间（季度频率），列是影响gdp增速的协变量指标和gdp增速
#data = read.csv('C:/Users/Administrator/Desktop/Index0820.csv',header=F,sep = ",",nrows = 34,fileEncoding = "UTF-8")
cols = ncol(data);cols
fcf <- c()
scf <- c()
tcf <- c()
gdpf <- c()
features = data[,2:cols]
View(features)
View(features)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
ncols <- ncol(data1)
nrows <- nrow(data1)
features1 <- data1[,2:(ncols-1)]
View(features1)
View(features1)
row.names(data1) <- data1[,1]
data1
View(data1)
View(data1)
data1 <- data1[,-1]
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
features1 <- data1[,2:(ncols-1)]
View(features1)
View(features1)
features1 <- data1[,:(ncols-1)]
features1 <- data1[,-1]
features1 <- data1[,1:(ncols-1)]
typeof(features1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
ty <-edit()
features1 <- data1[,1:(ncols-34+ty)]
View(features1)
View(features1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
ty <-edit()
features1 <- data1[,1:(ncols-34+ty)]
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
ty <-scan()
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
ty <-scan()
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("请先输入年份")
ty <-edit()
print("请再输入季度")
ts <- edit()
deltat <-4*(ty-2010)+(ts-1)
features1 <- data1[,1:(ncols-34+deltat)]
View(features1)
View(features1)
colnames(data1)[1]
int(2000-2000.1
)
as.integer(200-200.1)
as.integer(2018.1-2010.2)
floor(2018.2)
as.numeric(3.5)
as.numeric(substr(3.5))
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- (ty-floor(ty)-colnames(data1)[1]+floor(colnames(data1)[1]))*10
delta_t <-4*(floor(ty)-colnames(data1)[1])+delta_s
features1 <- data1[,1:(ncols-34+deltat)]
colnames(data1)[1]
delta_s <- (ty-floor(ty)-as.numeric(colnames(data1)[1])+floor(as.numeric(colnames(data1)[1]))*10
)
as.numeric(colnames(data1)[1])
(ty-floor(ty)-as.numeric(colnames(data1)[1])+floor(as.numeric(colnames(data1)[1])))*10
ty <- edit()
(ty-floor(ty)-as.numeric(colnames(data1)[1])+floor(as.numeric(colnames(data1)[1])))*10
ty-floor(ty)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- (((ty-floor(ty))-(as.numric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-colnames(data1)[1])+delta_s
features1 <- data1[,1:(ncols-34+deltat)]
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-colnames(data1)[1])+delta_s
features1 <- data1[,1:(ncols-34+deltat)]
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-colnames(data1)[1])+delta_s
features1 <- data1[,1:(ncols-34+deltat)]
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-as.numeric(colnames(data1)[1]))+delta_s
features1 <- data1[,1:(ncols-34+deltat)]
View(features1)
View(features1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-as.numeric(colnames(data1)[1]))+delta_s
features1 <- data1[,1:(ncols-34+deltat)]
View(features1)
View(features1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-as.numeric(colnames(data1)[1]))+delta_s
features1 <- data1[,1:(ncols-34+delta_t)]
((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
nrows <- nrow(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-floor(as.numeric(colnames(data1)[1])))+delta_s
features1 <- data1[,1:(ncols-34+delta_t)]
line1 = rep(NA,nrows)
features1 = cbind(t(features1),line1)
t(features1)
View(features1)
View(features1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-floor(as.numeric(colnames(data1)[1])))+delta_s
features1 <- data1[,1:(ncols-34+delta_t)]
nrows <- nrow(features1)
line1 = rep(NA,nrows)
features1 = cbind(t(features1),line1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-floor(as.numeric(colnames(data1)[1])))+delta_s
features <- data1[,1:(ncols-34+delta_t)]
features1 <- t(features)
nrows <- nrow(features1)
line1 = rep(NA,nrows)
features1 = cbind(t(features1),line1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-floor(as.numeric(colnames(data1)[1])))+delta_s
features <- data1[,1:(ncols-34+delta_t)]
features1 <- t(features)
nrows <- nrow(features1)
line1 = rep(NA,nrows)
features1 = cbind(features1,line1)
View(features1)
View(features1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-floor(as.numeric(colnames(data1)[1])))+delta_s
features <- data1[,1:(ncols-34+delta_t)]
features1 <- t(features)
nrows <- nrow(features1)
line1 <- rep(NA,nrows)
features1 <- cbind(features1,line1)
#features1
modd = MARSS(features1)
modd1 = MARSS(y=features1,inits = modd$par)
outt = augment.marssMLE(x=modd1,type.predict = c("observations", "states"), interval = "confidence", conf.level = 0.95)
outt
feature_index <- read.csv('C:/Users/Administrator/iCloudDrive/documents/code/upcode/codeblocks/Processed_datasets/feature_index.csv',fileEncoding = "UTF-8",header = F,stringsAsFactors = F)
feature_index <- as.vector(unlist(feature_index[1]))
subset(outt, t==(delta_t+1) & .rownames %in% feature_index)
indexf <- subset(outt, t==(delta_t+1) )$.fitted
print(indexf)
index_fitted <- subset(outt, t==(delta_t+1) & .rownames %in% feature_index)$.fitted
print(index_fitted)
write.table(t(index_fitted) , 'C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/Index_ch_fitted.csv',colnames = F,rownames = F)
write.table(t(index_fitted) , 'C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/Index_ch_fitted.csv',col.names = F,row.names = F)
View(features1)
View(features1)
View(features1)
View(features1)
View(outt)
View(outt)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/DFM.r', encoding = 'UTF-8', echo=TRUE)
View(outt)
View(outt)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/动态因子模型改进.R', encoding = 'UTF-8', echo=TRUE)
View(features1)
View(features1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-4*(floor(ty)-floor(as.numeric(colnames(data1)[1])))+delta_s
features <- data1[,1:(ncols-34+delta_t)]
View(features)
View(features)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/DFM.r', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/DFM.r', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/DFM.r', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/DFM.r', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/DFM.r', encoding = 'UTF-8', echo=TRUE)
View(features1)
View(features1)
# Calculate MSE
library(MARSS)
library(readxl)
data <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
# 导入数据，行是时间（季度频率），列是影响gdp增速的协变量指标和gdp增速
#data = read.csv('C:/Users/Administrator/Desktop/Index0820.csv',header=F,sep = ",",nrows = 34,fileEncoding = "UTF-8")
cols = ncol(data);cols
fcf <- c()
scf <- c()
tcf <- c()
gdpf <- c()
features = data[,2:cols]
#下面两行是数据中有gdp在最后一行的时候使用
#features = data[,2:(cols-1)]
#Y = data1[,cols]
features1 = t(features)
# 16.4-28
# 17.1-29
# 17.2-30
# 17.3-31
# 17.4-32
# 18.1-33
# 18.2-34
data_sc_gdp = read.csv('C:/Users/Administrator/iCloudDrive/Documents/杂七杂八/研一/第二学期/统计局/20180821/三产数据.csv', header = FALSE)
fc <- data_sc_gdp[1,94:99]
sc <- data_sc_gdp[2,94:99]
tc <- data_sc_gdp[3,94:99]
gdp <- data_sc_gdp[4,94:99]
for (ty  in c(28:33))            #ty for test years
{
features1 = features1[,1:ty] #17年4季度
#nu <- scan(what = "numeric",nmax = 1)
#features1 = features1[,1:nu]
#features1 = features1[,1:34] #17年4季度
rows = nrow(features1);
#填补空缺值
for(i in 1:(cols-1)){
for (j in 1:rows){
if(is.na(features1[i,j])){
features1[i,j] <- (features1[i,j-1]+features1[i,j+1])/2
}
}
}
write.csv(features1,"C:/Users/Administrator/Desktop/data.csv")
cols1 = ncol(features1);cols1
line = rep(NA,rows)
features1 = cbind(features1, line)
features1
View(features1)
View(features1)
}
library(MARSS)
library(readxl)
# ### 方案二
#data1 <- read_excel("C:/Users/Administrator/Desktop/Index0820.xlsx",n_max = 34)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/train_datasets.csv",header = T,nrows = 35 )
ncols <- ncol(data1)
rows <-  nrow(data1)
features = data1[,2:ncols]
#共计25个指标
# ### 预测2017第三季度、2017第四季度、2018第一季度
features1 = t(features)
features1 = features1[,1:(rows)] #2017年第四季度
#features1 = features1[,1:33] #2018第1季度
#features1 = features1[,1:34] #2018第2季度
line1 = rep(NA,ncols-1)
features1 = cbind(features1, line1)
View(features1)
View(features1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-as.integer(4*(floor(ty)-floor(as.numeric(colnames(data1)[1])))+delta_s)
features <- data1[,1:delta_t]
line1 <- rep(NA,nrow(features))
features1 <- cbind(features,line1)
library(MARSS)
library(readxl)
data1 <- read.csv("C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/train_datasets.csv",header = T,check.names = F)
row.names(data1) <- data1[,1]
data1 <- data1[,-1]
ncols <- ncol(data1)
print("please input the season you want to predict")
print("参照格式2018.1")
ty <-edit()
delta_s <- ((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10
delta_t <-as.integer(4*(floor(ty)-floor(as.numeric(colnames(data1)[1])))+delta_s)
features <- data1[,1:delta_t]
line1 <- rep(NA,nrow(features))
features1 <- cbind(features,line1)
features1 <- as.matrix(features1)
source('C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/DFM.r', encoding = 'UTF-8', echo=TRUE)
write.table(t(index_fitted) , 'C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/Index_ch_fitted.csv',col.names = F,row.names = F,sep = ',')
write.table(t(index_fitted) , 'C:/Users/Administrator/iCloudDrive/Documents/code/upcode/codeblocks/Processed_datasets/Index_ch_fitted.txt',col.names = F,row.names = F,sep = ',')
delta_s <- as.integer(((ty-floor(ty))-(as.numeric(colnames(data1)[1])-floor(as.numeric(colnames(data1)[1]))))*10)
